{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api/api.ts","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","FindMovie","addMovies","useState","title","setTitle","setMovie","erors","setErors","htmlFor","type","id","placeholder","classname","value","onChange","event","target","onClick","fetch","then","response","json","data","Response","Error","getMovie","catch","App","setMovies","some","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c0bb794d.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie | null;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\" data-cy=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie?.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movie-title\">{movie?.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"content\">\n          {movie?.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => {\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","/* eslint-disable no-console */\nimport React, { useState } from 'react';\nimport classname from 'classnames';\nimport { getMovie } from '../../api/api';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  addMovies: (value: Movie) => void\n}\n\nexport const FindMovie: React.FC<Props> = ({ addMovies }) => {\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [erors, setErors] = useState(true);\n\n  const findMovie = () => {\n    getMovie(title)\n      .then(response => setMovie(response))\n      .catch(() => setErors(false));\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classname('input',\n                { 'is-danger': !erors, 'is-primary': erors })}\n              value={title}\n              onChange={\n                (event) => {\n                  (\n                    setTitle(event.target.value)\n                  );\n                  setErors(true);\n                }\n              }\n            />\n          </div>\n\n          <p className=\"help is-danger\">\n            {!erors ? 'Can`t find a movie with such a title' : ''}\n          </p>\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={findMovie}\n              data-cy=\"find\"\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              data-cy=\"add\"\n              onClick={() => {\n                if (movie) {\n                  addMovies(movie);\n                  setMovie(null);\n                  setTitle('');\n                  setErors(true);\n                }\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        { movie\n          ? (\n            <>\n              <h2 className=\"title\">Preview</h2>\n              <MovieCard movie={movie} />\n            </>\n          )\n          : <></> }\n      </div>\n    </>\n  );\n};\n","const URL = 'https://www.omdbapi.com/?apikey=f11f28c0';\n\nexport function getMovie(title: string) {\n  return fetch(`${URL}&t=${title}`)\n    .then(response => response.json())\n    .then(data => {\n      if (data.Response === 'False') {\n        throw new Error();\n      }\n\n      return data;\n    });\n}\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App:React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovies = (value: Movie) => {\n    const dublicate = movies.some(item => item.imdbID === value.imdbID);\n\n    if (!dublicate) {\n      setMovies([...movies, value]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovies={addMovies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}